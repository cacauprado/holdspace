{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts"],"names":["breakpoints","ALIGNMENT","makeProps","prefix","def","reduce","props","val","upperFirst","alignValidator","str","concat","includes","alignProps","type","String","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","Vue","extend","name","functional","_objectSpread","tag","dense","Boolean","noGutters","render","h","_ref","data","children","cacheKey","classList","get","forEach","value","push","_defineProperty","set","mergeData","staticClass","class","VGrid","id","trim","attrs","classes","filter","key","startsWith","length","join","domProps","Grid","fluid","Array"],"mappings":"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","file":"js/chunk-27e480bb.a07ac7dd.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}